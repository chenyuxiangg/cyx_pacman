#include "food.h"
#include "global.h"
Food::Food(){
	Init();
	}

Food::~Food(){}

bool Food::FoodEaten(const float& x,const float& y,const float& pacx,const float& pacy){
	if (x >= pacx - 16.0 *cos(359 * M_PI / 180.0) && x <= pacx + 16.0*cos(359 * M_PI / 180.0)){
		if (y >= pacy - 16.0*cos(359 * M_PI / 180.0) && y <= pacy + 16.0*cos(359 * M_PI / 180.0)){
			return true;
		}
	}
	return false;
	}

void Food::DrawFood(const float& pacx,const float& pacy){
	deque<float> temp;
	//检查食物是否没有被吃掉
	for (deque<float>::size_type i = 0; i < m_food.size(); i = i + 2){
		if (!FoodEaten(m_food.at(i)*squareSize, m_food.at(i + 1)*squareSize, pacx, pacy)){
			temp.push_back(m_food.at(i));
			temp.push_back(m_food.at(i + 1));
		}
		else {
			g_points++;
		}
	}
	m_food.swap(temp);
	glPointSize(5.0);
	glBegin(GL_POINTS);
	glColor3f(1.0, 1.0, 1.0);
	//画上食物
	for (deque<float>::size_type j = 0; j < m_food.size(); j = j + 2){
		glVertex2f(m_food.at(j)*squareSize, m_food.at(j + 1)*squareSize);//画点
	}
	glEnd();
	}

void Food::Init(){
	m_food = { 1.5, 1.5, 1.5, 2.5, 1.5, 3.5, 1.5, 4.5, 1.5, 5.5, 1.5, 6.5, 1.5, 7.5, 1.5, 8.5, 1.5, 9.5, 1.5, 10.5, 1.5, 11.5, 1.5, 12.5, 1.5, 13.5, 2.5, 1.5, 2.5, 6.5, 2.5, 9.5, 2.5, 13.5, 3.5, 1.5, 3.5, 2.5, 3.5, 3.5, 3.5, 4.5, 3.5, 6.5, 3.5, 8.5, 3.5, 9.5, 3.5, 10.5, 3.5, 11.5, 3.5, 13.5, 4.5, 1.5, 4.5, 4.5, 4.5, 5.5, 4.5, 6.5, 4.5, 7.5, 4.5, 8.5, 4.5, 11.5, 4.5, 12.5, 4.5, 13.5, 5.5, 1.5, 5.5, 2.5, 5.5, 5.5, 5.5, 10.5, 5.5, 11.5, 5.5, 13.5, 6.5, 2.5, 6.5, 3.5, 6.5, 4.5, 6.5, 5.5, 6.5, 7.5, 6.5, 10.5, 6.5, 13.5, 7.5, 5.5, 7.5, 6.5, 7.5, 7.5, 7.5, 9.5, 7.5, 10.5, 7.5, 11.5, 7.5, 12.5, 7.5, 13.5, 8.5, 2.5, 8.5, 3.5, 8.5, 4.5, 8.5, 5.5, 8.5, 7.5, 8.5, 10.5, 8.5, 13.5, 9.5, 1.5, 9.5, 2.5, 9.5, 5.5, 9.5, 10.5, 9.5, 11.5, 9.5, 13.5, 10.5, 1.5, 10.5, 4.5, 10.5, 5.5, 10.5, 6.5, 10.5, 7.5, 10.5, 8.5, 10.5, 11.5, 10.5, 12.5, 10.5, 13.5, 11.5, 1.5, 11.5, 2.5, 11.5, 3.5, 11.5, 4.5, 11.5, 5.5, 11.5, 6.5, 11.5, 8.5, 11.5, 9.5, 11.5, 10.5, 11.5, 11.5, 11.5, 13.5, 12.5, 1.5, 12.5, 6.5, 12.5, 9.5, 12.5, 13.5, 13.5, 1.5, 13.5, 2.5, 13.5, 3.5, 13.5, 4.5, 13.5, 5.5, 13.5, 6.5, 13.5, 7.5, 13.5, 8.5, 13.5, 9.5, 13.5, 10.5, 13.5, 11.5, 13.5, 12.5, 13.5, 13.5 };
	}
